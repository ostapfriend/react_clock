{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["FormattedDate","props","date","toLocaleTimeString","Clock","state","Date","timerID","this","setInterval","tick","prevProps","oldName","name","newName","console","log","clearInterval","setState","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","nameClock","visibleClock","hiddenClock","className","type","onClick","React","ReactDOM","render","document","getElementById"],"mappings":"sNAGA,SAASA,EAAcC,GACrB,OAAO,uCAAQA,EAAMC,KAAKC,qBAAnB,OAWF,IAAMC,EAAb,4MACEC,MAAQ,CACNH,KAAM,IAAII,MAFd,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aACb,kBAAM,EAAKC,SACX,OAVN,gCAcE,SAAmBC,GACjB,IAAcC,EAAYD,EAAlBE,KACMC,EAAYN,KAAKP,MAAvBY,KAEJF,EAAUE,OAASL,KAAKP,MAAMY,MAChCE,QAAQC,IAAR,qCAA0CJ,EAA1C,eAAwDE,MAnB9D,kCAuBE,WACEG,cAAcT,KAAKD,WAxBvB,kBA2BE,WACEC,KAAKU,SAAS,CACZhB,KAAM,IAAII,SA7BhB,oBAiCE,WACE,IAAQJ,EAASM,KAAKH,MAAdH,KAER,OACE,8BACE,cAACF,EAAD,CAAeE,KAAMA,UAtC7B,GAA2BiB,aCT3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJrB,MAAyB,CACvBsB,UAAU,EACVC,UAAW,G,EAObC,aAAe,WACb,EAAKX,SAAS,CAAES,UAAU,K,EAG5BG,YAAc,WACZ,EAAKZ,SAAS,CAAES,UAAU,K,uDAT5B,c,oBAYA,WACE,OACE,sBAAKI,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,qBAEGX,OAEH,qBAAKW,UAAU,aAAf,SACGvB,KAAKH,MAAMsB,UAAY,cAAC,EAAD,CAAOd,KAAML,KAAKH,MAAMuB,cAGlD,sBAAKG,UAAU,oBAAf,UACE,wBACEC,KAAK,SACLC,QAASzB,KAAKqB,aACdE,UAAU,4BAHZ,yBAQA,wBACEC,KAAK,SACLC,QAASzB,KAAKsB,YACdC,UAAU,4BAHZ,oC,GAtCQG,IAAMf,WAmDTO,ICjEfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a9c959d6.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\nfunction FormattedDate(props: { date: { toLocaleTimeString: () => any; }; }) {\n  return <h2>{`${props.date.toLocaleTimeString()}.`}</h2>;\n}\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerID!: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name: oldName } = prevProps;\n    const { name: newName } = this.props;\n\n    if (prevProps.name !== this.props.name) {\n      console.log(`The Clock was renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div>\n        <FormattedDate date={date} />\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  nameClock: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    nameClock: 0,\n  };\n\n  componentDidMount() {\n\n  }\n\n  visibleClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hiddenClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App__name\">\n          Name is:\n          {getRandomName()}\n        </div>\n        <div className=\"App__timer\">\n          {this.state.hasClock && <Clock name={this.state.nameClock} />}\n        </div>\n\n        <div className=\"button__container\">\n          <button\n            type=\"button\"\n            onClick={this.visibleClock}\n            className=\"App__button App__button-1\"\n          >\n            Start timer\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.hiddenClock}\n            className=\"App__button App__button-2\"\n          >\n            Finish timer\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}